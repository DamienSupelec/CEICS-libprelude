
/*****
*
* Copyright (C) 2005 PreludeIDS Technologies. All Rights Reserved.
* Author: Yoann Vandoorselaere <yoann.v@prelude-ids.com>
*
* This file is part of the Prelude library.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; see the file COPYING.  If not, write to
* the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
*
*****/

/* Auto-generated by the GenerateIDMEFValueClassSwigMapping package */
#include "idmef-value.h"
#include "idmef-tree-wrap.h"


void *swig_idmef_value_get_descriptor(idmef_value_t *value)
{
        unsigned int i = 0;
        void *object = idmef_value_get_object(value);
        idmef_class_id_t wanted_class = idmef_value_get_class(value);
	const struct {
	        idmef_class_id_t class;
	        void *swig_type;
	} tbl[] = {
                { IDMEF_CLASS_ID_ADDITIONAL_DATA, SWIGTYPE_p_idmef_additional_data_t },
                { IDMEF_CLASS_ID_CLASSIFICATION, SWIGTYPE_p_idmef_classification_t },
                { IDMEF_CLASS_ID_USER_ID, SWIGTYPE_p_idmef_user_id_t },
                { IDMEF_CLASS_ID_USER, SWIGTYPE_p_idmef_user_t },
                { IDMEF_CLASS_ID_ADDRESS, SWIGTYPE_p_idmef_address_t },
                { IDMEF_CLASS_ID_PROCESS, SWIGTYPE_p_idmef_process_t },
                { IDMEF_CLASS_ID_WEB_SERVICE, SWIGTYPE_p_idmef_web_service_t },
                { IDMEF_CLASS_ID_SNMP_SERVICE, SWIGTYPE_p_idmef_snmp_service_t },
                { IDMEF_CLASS_ID_SERVICE, SWIGTYPE_p_idmef_service_t },
                { IDMEF_CLASS_ID_NODE, SWIGTYPE_p_idmef_node_t },
                { IDMEF_CLASS_ID_SOURCE, SWIGTYPE_p_idmef_source_t },
                { IDMEF_CLASS_ID_FILE_ACCESS, SWIGTYPE_p_idmef_file_access_t },
                { IDMEF_CLASS_ID_INODE, SWIGTYPE_p_idmef_inode_t },
                { IDMEF_CLASS_ID_FILE, SWIGTYPE_p_idmef_file_t },
                { IDMEF_CLASS_ID_LINKAGE, SWIGTYPE_p_idmef_linkage_t },
                { IDMEF_CLASS_ID_TARGET, SWIGTYPE_p_idmef_target_t },
                { IDMEF_CLASS_ID_ANALYZER, SWIGTYPE_p_idmef_analyzer_t },
                { IDMEF_CLASS_ID_ALERTIDENT, SWIGTYPE_p_idmef_alertident_t },
                { IDMEF_CLASS_ID_IMPACT, SWIGTYPE_p_idmef_impact_t },
                { IDMEF_CLASS_ID_ACTION, SWIGTYPE_p_idmef_action_t },
                { IDMEF_CLASS_ID_CONFIDENCE, SWIGTYPE_p_idmef_confidence_t },
                { IDMEF_CLASS_ID_ASSESSMENT, SWIGTYPE_p_idmef_assessment_t },
                { IDMEF_CLASS_ID_TOOL_ALERT, SWIGTYPE_p_idmef_tool_alert_t },
                { IDMEF_CLASS_ID_CORRELATION_ALERT, SWIGTYPE_p_idmef_correlation_alert_t },
                { IDMEF_CLASS_ID_OVERFLOW_ALERT, SWIGTYPE_p_idmef_overflow_alert_t },
                { IDMEF_CLASS_ID_ALERT, SWIGTYPE_p_idmef_alert_t },
                { IDMEF_CLASS_ID_HEARTBEAT, SWIGTYPE_p_idmef_heartbeat_t },
                { IDMEF_CLASS_ID_MESSAGE, SWIGTYPE_p_idmef_message_t },
                { IDMEF_CLASS_ID_REFERENCE, SWIGTYPE_p_idmef_reference_t },
                { IDMEF_CLASS_ID_CHECKSUM, SWIGTYPE_p_idmef_checksum_t },
                { 0, NULL }
        };

        for ( i = 0; tbl[i].swig_type != NULL; i++ ) {
                if ( tbl[i].class == wanted_class )
		        return tbl[i].swig_type;
        }

        return NULL;
}
