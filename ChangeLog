2001-11-16  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/include/idmef-tree.h: IDMEF structure.
	* src/include/idmef-message-id.h: ID for IDMEF based message.

2001-11-10  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/prelude-message.c: 
	(read_message_header): 
	(prelude_msg_get): 
	(prelude_msg_write): 
	(prelude_msg_set): 
	use separate index for read / write. This allow us to send a just
	read messages. Forwarding between Manager is on it's way.

	* src/sensor.c (prelude_sensor_send_alert): use
	asynchrnous broadcasting.

	* src/prelude-client-mgr.c (walk_manager_lists): 
	Never free the message ourself. This is up to the caller to do it.
	
	(broadcast_async_cb): 
	(prelude_client_mgr_broadcast_async): When asynchronous operation
	are used, free the message ourself.

2001-11-07  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/prelude-async.c (get_elapsed_time): new function.
	(wait_timer_and_data): check the average time we spent waiting on
	the condition. (which may be > 1 second if the condition was signaled 
	several time).
	
	(async_thread): Thread safety on list walking.

	* src/sensor.c: include prelude-list.h, not list.h

2001-11-06  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/prelude-client-mgr.c (prelude_client_mgr_broadcast_msg): 
	make this function void. Set the message to be processed asynchronously.

	* src/sensor.c (prelude_sensor_init): Initialize
	the asynchronous subsystem.

	* src/prelude-message.c: prelude_message_t inherit of 
	prelude_async_object_t capability.

	* src/timer.c: Thread safety.
	* src/prelude-async.c: New asynchronous queue implementation.

2001-11-05  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/prelude-client-mgr.c (prelude_client_mgr_broadcast_msg): 
	Do not print that failsafe mode is enabled for each message.
	(broadcast_saved_message): print an error if message forwarding fail.

	(flush_backup_if_needed): ftruncate doesn't modify the file offset. 
	Seek to the beginning of the file.

	* src/prelude-client.c (prelude_client_connect): set
	the connection_broken member here. This'll avoid bug
	on reconnection.

	* sensor-adduser/ssl-register.c: include netinet/in.h to fix
	BSD compilation. 
	Thanks to Krzysztof Zaraska <kzaraska@student.uci.agh.edu.pl> for
	reporting this.

	* sensor-adduser/sensor-adduser.c: 
	include config.h

	* src/prelude-client.c
	Address member is not const anymore.
	
	(prelude_client_new): duplicate address string.
	(prelude_client_destroy): free address string.

	* src/prelude-io.c (copy_forward): 
	forward data by chunk of 8192 bytes.

2001-10-30  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/prelude-io.c: compile properly even if SSL is not available.

	* src/prelude-client-mgr.c (parse_config_string): 
	new function, stop using strtok() which doesn't really fit
	our need. This also fix a bug where another NULL client would be added
	causing AND of client emission to fail.

	* sensor-adduser/sensor-adduser.c (main): 
	Handle case where SSL is not installed.

	* src/prelude-auth.c: 
	Modify to work with a prelude-io object.
	
	* src/prelude-client.c: 
	Fit prelude-auth API change.
	
	* src/Makefile.am (libprelude_la_SOURCES): 
	* src/include/Makefile.am (include_HEADERS):
	remove socket-op.h and socket-op.c, 
	it is obsoleted by the prelude-io API.
	
2001-10-25  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/sensor.c: remove the prelude_sensor_t private structure.
	We don't need it anymore. Add a global pointer on a Manager list.
	(setup_manager_addr): fit the new clients managers API.

	* src/prelude-client.c: remove reconnection / failsafe (message
	backup) code. This is moved to prelude-client-mgr.c

	(prelude_client_new): Ignore the SIGPIPE signal (we'll check at the
	write return value thought). Support for Manager implicitly closing
	the connection should be improved thought.

	(prelude_client_new): Do not connect here.
	(prelude_client_connect): new function, connect here.
	(prelude_client_get_address): new function, get the address / port
	associated with a prelude_client_t object.
	
	Change Prelude Report to Prelude Manager in several place.

	* sensor-adduser/sensor-adduser.c: we don't need networking
	header here.

	* src/prelude-client-mgr.c: Finish the implementation of the
	clients manager. Have to beautify and comment the code a little
	more thought. Parsing of the configuration line should probably 
	be more robust too.

2001-10-18  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/prelude-message.c (prelude_msg_read): Changed message
	reading API. This function shoud *never* block, even if a
	message isn't available for reading.

	* src/prelude-io.c (prelude_io_read_wait): new function.
	(prelude_io_read): do not wait for data to arrive.

2001-10-16  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* A lot of modification. Complete API change, use
	OOP model in non time critical place for maintainability
	reason.

2001-10-09  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/include/prelude-io.h: 
	* src/prelude-io.c: 

	New standard / SSL - read / write / close abstraction.
	
	
2001-10-05  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/auth-common.c (write_account): better error reporting.

2001-10-03  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/alert-read.c (prelude_alert_read): 
	fd is a pointer on a private structure to be passed to the
	read function cb.

2001-09-28  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/ssl-config.c: Define KEY_LENGTH and CERT_DAYS moved
	to this file instead of ssl-config.h, they should be used 
	directly by any SSL related sources files.

	Remove the ssl config structure cert_directory member and 
	associated function, it's dependant on the user, and shouldn't 
	be computed here.

	* src/include/alert-read.h: new type readfunc_t,
	to point on a read function to use.
	
	* src/alert-read.c (prelude_alert_read): 
	take a readfunc_t argument identifying the read function to use.
	

2001-09-26  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/include/ssl-config.h: remove manager related 
	definitions.

2001-09-02  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/alert-read.c (prelude_alert_read_msg): 
	* src/include/alert-read.h (prelude_alert_read_msg): 
	buf is void.

	* src/include/alert-id.h (ID_PRELUDE_NIDS_ALERT): 
	new file, define known alert ID.

	* src/alert-read.c (prelude_alert_read): 
	better control of the read() return value.
	(prelude_alert_read): Set the message index to 0.

	(prelude_alert_read_msg): return 0 when end of message is reached,
	1 if we got a message, -1 on error. Handle the end of message 
	character.

2001-09-01  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/alert-read.c: New communication layer.

2001-08-28  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/include/alert.h: 
	include a sensor_data_len member (16bits).

	* src/alert-common.c (read_alert): read sensor data id
	and sensor data len.

	* src/config-engine.c (cmp_entry): oops, badly synced
	with last prelude stable branch change.

	* src/include/alert.h: include inttypes.h
	alert_t now contain a pointer on the private sensor
	data, and a 8 bits integer representing the kind of
	data it is.

2001-08-26  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

        * src/libprelude/config-engine.c (cmp_entry): 
	Avoid reading past the end of our buffer when the line
	is blank.

	* src/libprelude/plugin-common.c (plugin_config_get): 
	If the argument to pass to the plugin is a variable, try
	to look it up. If it fail issue a warning. Return only if 
	the argument for this option is required.

	* src/libprelude/config-engine.c (config_open): 
	(config_close): 
	(config_set): 
	(get_variable_content): Lookup value for the specified variable. 
	(config_get): Call get_variable_content() if the value 
	found is a variable.

	Made gtk-doc style comment for all theses functions.
	
	* src/libprelude/include/Makefile.am (EXTRA_DIST): 
	add variable.h

	* src/libprelude/Makefile.am (libprelude_la_SOURCES): 
	add variable.c

	* src/libprelude/variable.c: move the variable implementation
	to libprelude. Little code cleanup and function documentation.
	
2001-08-24  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/alert-common.c (read_alert):
	Return an error if socket_read_nowait() returned 0.
        This prevent a possible report server if the sensor is interupted
        while sending an alert.

2001-08-23  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/auth-common.c (auth_file_exist_or_create): 
	(auth_read_entry): 
	(auth_create_account): Documented. Put the cpass variable 
	into the #ifdef scope.

	include config.h

2001-08-21  Yoann Vandoorselaere  <yoann@mandrakesoft.com>

	* src/include/compat.h: if package is not defined, 
	dump an error telling to include <libprelude/config.h>

	* Makefile.am (SUBDIRS): process docs subdirectory after
	src.

	* src/include/list.h (list_entry): updated to a more
	recent, documented version, kernel use unsigned long for
	pointer, we do use void *. Use the inline keyword.

	* Move to it's own CVS module.

