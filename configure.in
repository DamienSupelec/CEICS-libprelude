dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.53)

AC_INIT
AC_CONFIG_SRCDIR([src])

AC_CANONICAL_TARGET([])
AM_INIT_AUTOMAKE(libprelude, 0.4.1)
AM_CONFIG_HEADER(config.h)
AM_DISABLE_STATIC

AM_MAINTAINER_MODE

dnl setup libltdl

AC_CONFIG_SUBDIRS(libltdl)
AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AM_PROG_LIBTOOL

AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)



dnl Checks for programs.

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_C_INLINE


AC_C_BIGENDIAN(libprelude_cflags="$libprelude_cflags -DWORDS_BIGENDIAN")


AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(libprelude_libs)
AC_SUBST(libprelude_cflags)

CFLAGS=""


dnl **************************************************
dnl * Check for crypt library                        *
dnl **************************************************
AC_CHECK_LIB(crypt, crypt, cryptlib=true)

if test x$cryptlib = xtrue; then
	AC_DEFINE(HAVE_CRYPT, , 1)
	libprelude_libs="$libprelude_libs -lcrypt";
fi

dnl **************************************************
dnl * Check for Pthread library                      *
dnl **************************************************

for dir in /usr /usr/local /usr/pkg; do
	AC_CHECK_FILE($dir/lib/libpthread.so, pthread_lib=$dir)
	AC_CHECK_FILE($dir/include/pthread.h, pthread_include=$dir)
done

pthrlib=no

if test -n "$pthread_lib" && test -n "$pthread_include"; then
	pthrlib=yes
	libprelude_libs="$libprelude_libs -L$pthread_lib/lib -lpthread"
	libprelude_cflags="$libprelude_cflags -I$pthread_include/include -D_REENTRANT"
else
	#AC_CHECK_LIB(c_r, pthread_create, pthrlib="yes")
	#if test x$pthrlib = xyes; then
	#	libprelude_libs="$libprelude_libs -lc_r"
	#	libprelude_cflags="-D_REENTRANT"
	#fi

	AC_MSG_CHECKING(whether ${CC-cc} accepts -pthread)

	CFLAGS_bak=$CFLAGS
	CFLAGS="$CFLAGS -pthread"

	cat > conftest.c << EOF 

	int main(void)
	{
		exit(0);
	}
EOF


	${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.c $LIBS >/dev/null 2>&1
	CFLAGS=$CFLAGS_bak
	if test -x conftest; then
		pthrlib=yes
		libprelude_libs="$libprelude_libs -pthread"
		libprelude_cflags="$libprelude_cflags -D_THREAD_SAFE -D_REENTRANT"

		if test -n "$pthread_include"; then
			libprelude_cflags="$libprelude_cflags -I$pthread_include/include"
		fi
		
		rm -f conftest
		AC_MSG_RESULT(yes)
	else
		AC_MSG_RESULT(no)
	fi
fi

if test x$pthrlib != xyes; then
	AC_MSG_ERROR(couldn't find POSIX thread library)
fi

dnl **************************************************
dnl * Check for networking function                  *
dnl **************************************************

AC_CHECK_LIB(c, inet_ntoa, libc_inet_ntoa=yes)
if test x$libc_inet_ntoa != xyes; then
	AC_CHECK_LIB(nsl, inet_ntoa, libprelude_libs="$libprelude_libs -lnsl")
fi

AC_CHECK_LIB(c, socket, libc_socket=yes)
if test x$libc_socket != xyes; then
	AC_CHECK_LIB(socket, socket, libprelude_libs="$libprelude_libs -lsocket")
fi

AC_CHECK_LIB(c, inet_aton, libc_inet_aton=yes)
if test x$libc_inet_aton != xyes; then
	AC_CHECK_LIB(resolv, inet_aton, libprelude_libs="$libprelude_libs -lresolv")
fi




dnl **************************************************
dnl * Check for OpenSSL.                             *
dnl **************************************************

AC_CHECK_HEADER(openssl/ssl.h, openssl_header=yes)
AC_ARG_ENABLE(openssl, [  --enable-openssl	Use OpenSSL to communicate with Manager [default=auto]],, enable_openssl=yes)

if test x$enable_openssl = xyes ; then
	if test x$openssl_header = xyes; then
		libprelude_libs="$libprelude_libs -lssl -lcrypto"
		AC_DEFINE(HAVE_SSL, , 1)
  	else
    		enable_openssl=no
  	fi
fi


dnl **************************************************
dnl * Enable / Disable gprof profiling.              *
dnl **************************************************

AC_ARG_ENABLE(profiling, [  --enable-profiling Enable Gprof profiling - with thread workaround [default=no]], \
	      enable_profiling=yes, enable_profiling=no)

if test x$enable_profiling = xyes ; then
	CFLAGS="$CFLAGS -O3 -pg"
else
	CFLAGS="$CFLAGS -O3 -fomit-frame-pointer";
fi



dnl **************************************************
dnl * Do we need aligned access ? (from tcpdump)     *
dnl **************************************************

AC_MSG_CHECKING(if unaligned accesses fail)

AC_CACHE_VAL(ac_cv_lbl_unaligned_fail,
        [case "$host_cpu" in

        # XXX: should also check that they don't do weird things (like on arm)
        alpha*|arm*|hp*|mips*|sparc*|ia64)
                ac_cv_lbl_unaligned_fail=yes
                ;;

        *)
                cat >conftest.c <<EOF
#               include <sys/types.h>
#               include <sys/wait.h>
#               include <stdio.h>
                unsigned char a[[5]] = { 1, 2, 3, 4, 5 };
                main() {
                unsigned int i;
                pid_t pid;
                int status;
                /* avoid "core dumped" message */
                pid = fork();
                if (pid <  0)
                        exit(2);
                if (pid > 0) {
                        /* parent */
                        pid = waitpid(pid, &status, 0);
                        if (pid < 0)
                                exit(3);
                        exit(!WIFEXITED(status));
                }
                /* child */
                i = *(unsigned int *)&a[[1]];
                printf("%d\n", i);
                exit(0);
                }
EOF
                ${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS \
                    conftest.c $LIBS >/dev/null 2>&1
                if test ! -x conftest ; then
                        dnl failed to compile for some reason
                        ac_cv_lbl_unaligned_fail=yes
                else
                        ./conftest >conftest.out
                        if test ! -s conftest.out ; then
                                ac_cv_lbl_unaligned_fail=yes
                        else
                                ac_cv_lbl_unaligned_fail=no
                        fi
                fi
                rm -f conftest* core core.conftest
                ;;
        esac])
    
AC_MSG_RESULT($ac_cv_lbl_unaligned_fail)
if test $ac_cv_lbl_unaligned_fail = yes ; then
	libprelude_cflags="$libprelude_cflags -DNEED_ALIGNED_ACCESS"
fi



dnl **************************************************
dnl * Check for GTK-DOC                              *
dnl **************************************************

AC_ARG_WITH(html-dir, [  --with-html-dir=PATH path to installed docs ])

if test "x$with_html_dir" = "x" ; then
	HTML_DIR='${datadir}/gtk-doc/html';
else
	HTML_DIR=$with_html_dir;
fi

AC_SUBST(HTML_DIR)
AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.6

if $GTKDOC; then 
	gtk_doc_version=`gtkdoc-mkdb --version`
	AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])

    	if perl << EOF ; then
      		exit (("$gtk_doc_version" =~ /^[[0-9]]+\.[[0-9]]+$/) && ("$gtk_doc_version" >= "$gtk_doc_min_version") ? 0 : 1); 
EOF
      		AC_MSG_RESULT(yes);
   	else
      		AC_MSG_RESULT(no);
      		GTKDOC=false;
   	fi
fi


dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto; then
  	if test x$GTKDOC = xtrue; then
    		enable_gtk_doc=yes;
  	else
    		enable_gtk_doc=no;
  	fi
fi

AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)



dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday select socket strdup strerror strstr)

sensors_ident_dir=$localstatedir/prelude-sensors
sensors_config_dir=$sysconfdir/prelude-sensors

AC_SUBST(sensors_ident_dir)
AC_SUBST(sensors_config_dir)


dnl We use no-strict-prototype because of SSL warning.

CFLAGS="$CFLAGS -Wall -Wno-strict-prototypes -Wmissing-prototypes -Wmissing-declarations \
-Wbad-function-cast -Wcast-qual -Wcast-align -Wnested-externs -Wunused"


AC_SUBST(CFLAGS)

AC_CONFIG_FILES([

Makefile 
libprelude-config

src/Makefile
src/include/Makefile

sensor-adduser/Makefile

docs/Makefile
docs/api/Makefile

])
AC_CONFIG_COMMANDS([default],[[ chmod +x libprelude-config ]],[[]])
AC_OUTPUT


echo
echo "*** Dumping configuration ***"
echo "    - Use OpenSSL            : $enable_openssl"
echo "    - Generate documentation : $enable_gtk_doc"
echo "    - Profiling enabled      : $enable_profiling"









