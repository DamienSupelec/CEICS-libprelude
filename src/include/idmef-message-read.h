
/*****
*
* Copyright (C) 2001-2004 Yoann Vandoorselaere <yoann@prelude-ids.org>
* Copyright (C) 2003 Nicolas Delon <delon.nicolas@wanadoo.fr>
* All Rights Reserved
*
* This file is part of the Prelude program.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; see the file COPYING.  If not, write to
* the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
*
*****/

/* Auto-generated by the GenerateIDMEFMessageReadH package (Mon Nov  1 15:44:12 2004) */

#ifndef _LIBPRELUDE_IDMEF_MESSAGE_READ_H
#define _LIBPRELUDE_IDMEF_MESSAGE_READ_H


idmef_additional_data_t *idmef_additional_data_read(idmef_additional_data_t *additional_data, prelude_msg_t *msg);

idmef_classification_t *idmef_classification_read(idmef_classification_t *classification, prelude_msg_t *msg);

idmef_userid_t *idmef_userid_read(idmef_userid_t *userid, prelude_msg_t *msg);

idmef_user_t *idmef_user_read(idmef_user_t *user, prelude_msg_t *msg);

idmef_address_t *idmef_address_read(idmef_address_t *address, prelude_msg_t *msg);

idmef_process_t *idmef_process_read(idmef_process_t *process, prelude_msg_t *msg);

idmef_webservice_t *idmef_webservice_read(idmef_webservice_t *webservice, prelude_msg_t *msg);

idmef_snmpservice_t *idmef_snmpservice_read(idmef_snmpservice_t *snmpservice, prelude_msg_t *msg);

idmef_service_t *idmef_service_read(idmef_service_t *service, prelude_msg_t *msg);

idmef_node_t *idmef_node_read(idmef_node_t *node, prelude_msg_t *msg);

idmef_source_t *idmef_source_read(idmef_source_t *source, prelude_msg_t *msg);

idmef_file_access_t *idmef_file_access_read(idmef_file_access_t *file_access, prelude_msg_t *msg);

idmef_inode_t *idmef_inode_read(idmef_inode_t *inode, prelude_msg_t *msg);

idmef_file_t *idmef_file_read(idmef_file_t *file, prelude_msg_t *msg);

idmef_linkage_t *idmef_linkage_read(idmef_linkage_t *linkage, prelude_msg_t *msg);

idmef_target_t *idmef_target_read(idmef_target_t *target, prelude_msg_t *msg);

idmef_analyzer_t *idmef_analyzer_read(idmef_analyzer_t *analyzer, prelude_msg_t *msg);

idmef_alertident_t *idmef_alertident_read(idmef_alertident_t *alertident, prelude_msg_t *msg);

idmef_impact_t *idmef_impact_read(idmef_impact_t *impact, prelude_msg_t *msg);

idmef_action_t *idmef_action_read(idmef_action_t *action, prelude_msg_t *msg);

idmef_confidence_t *idmef_confidence_read(idmef_confidence_t *confidence, prelude_msg_t *msg);

idmef_assessment_t *idmef_assessment_read(idmef_assessment_t *assessment, prelude_msg_t *msg);

idmef_tool_alert_t *idmef_tool_alert_read(idmef_tool_alert_t *tool_alert, prelude_msg_t *msg);

idmef_correlation_alert_t *idmef_correlation_alert_read(idmef_correlation_alert_t *correlation_alert, prelude_msg_t *msg);

idmef_overflow_alert_t *idmef_overflow_alert_read(idmef_overflow_alert_t *overflow_alert, prelude_msg_t *msg);

idmef_alert_t *idmef_alert_read(idmef_alert_t *alert, prelude_msg_t *msg);

idmef_heartbeat_t *idmef_heartbeat_read(idmef_heartbeat_t *heartbeat, prelude_msg_t *msg);

#endif /* _LIBPRELUDE_IDMEF_MESSAGE_READ_H */
