/*****
*
* Copyright (C) 2004, 2005 PreludeIDS Technologies. All Rights Reserved.
* Author: Yoann Vandoorselaere <yoann.v@prelude-ids.com>
*
* This file is part of the Prelude library.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2, or (at your option)
* any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; see the file COPYING.  If not, write to
* the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
*
*****/

#ifndef _LIBPRELUDE_INTTYPES_H
#define _LIBPRELUDE_INTTYPES_H

#ifdef __cplusplus
 extern "C" {
#endif

@__PRELUDE_HAVE_STDINT_H@
@__PRELUDE_HAVE_INTTYPES_H@
@__PRELUDE_HAVE_64BIT_LONG@
@__PRELUDE_STDINT_HAVE_UINT8@
@__PRELUDE_STDINT_HAVE_UINT16@
@__PRELUDE_STDINT_HAVE_UINT32@
@__PRELUDE_STDINT_HAVE_UINT64@
@__PRELUDE_HAVE_WORKING_PRI64_PREFIX@


#ifdef __PRELUDE_HAVE_STDINT_H
  #include <stdint.h>
#endif
#ifdef __PRELUDE_HAVE_INTTYPES_H
  #include <inttypes.h>
#endif


#ifndef TRUE
 #define TRUE 1
#endif

#ifndef FALSE
 #define FALSE 0
#endif



/*
 * Minimum of signed integral types.
 */
#ifndef INT8_MIN
 #define INT8_MIN               (-128)
#endif

#ifndef INT16_MIN
 #define INT16_MIN              (-32767 - 1)
#endif

#ifndef INT32_MIN
 #define INT32_MIN              (-2147483647 - 1)
#endif

#ifndef INT64_MIN
 #define INT64_MIN              (-__INT64_SUFFIX(9223372036854775807) - 1)
#endif


/*
 * Maximum of signed integral types.
 */
#ifndef INT8_MAX
 #define INT8_MAX               (127)
#endif

#ifndef INT16_MAX
 #define INT16_MAX              (32767)
#endif

#ifndef INT32_MAX
 #define INT32_MAX              (2147483647)
#endif

#ifndef INT64_MAX
 #define INT64_MAX              (__INT64_SUFFIX(9223372036854775807))
#endif


/*
 * Maximum of unsigned integral types.
 */
#ifndef UINT8_MAX
 #define UINT8_MAX              (255)
#endif

#ifndef UINT16_MAX
 #define UINT16_MAX             (65535)
#endif

#ifndef UINT32_MAX
 #define UINT32_MAX             (4294967295U)
#endif

#ifndef UINT64_MAX
 #define UINT64_MAX             (__UINT64_SUFFIX(18446744073709551615))
#endif

/*
 * Other
 */
#ifndef INTMAX_MIN
 #define INTMAX_MIN             INT64_MIN
#endif

#ifndef INTMAX_MAX
 #define INTMAX_MAX             INT64_MAX
#endif

#ifndef UINTMAX_MAX
 #define UINTMAX_MAX            UINT64_MAX
#endif


/*
 * format specifier
 */
#ifndef __PRELUDE_HAVE_WORKING_PRI64_PREFIX

 #ifdef __PRELUDE_HAVE_64BIT_LONG
  #define __PRELUDE_PRI64_PREFIX     "l"
  #define __PRELUDE_INT64_SUFFIX(c)  c ## L
  #define __PRELUDE_UINT64_SUFFIX(c) c ## UL
 #else
  #define __PRELUDE_PRI64_PREFIX     "ll"
  #define __PRELUDE_INT64_SUFFIX(c)  c ## LL
  #define __PRELUDE_UINT64_SUFFIX(c) c ## ULL
 #endif

 #undef PRId64
 #define PRId64      __PRELUDE_PRI64_PREFIX "d"

 #undef PRIi64
 #define PRIi64      __PRELUDE_PRI64_PREFIX "i"

 #undef PRIo64
 #define PRIo64      __PRELUDE_PRI64_PREFIX "o"

 #undef PRIx64
 #define PRIx64      __PRELUDE_PRI64_PREFIX "x"

 #undef PRIX64
 #define PRIX64      __PRELUDE_PRI64_PREFIX "X"

 #undef PRIu64
 #define PRIu64      __PRELUDE_PRI64_PREFIX "u"


 #undef SCNd64
 #define SCNd64      __PRELUDE_PRI64_PREFIX "d"

 #undef SCNi64
 #define SCNi64      __PRELUDE_PRI64_PREFIX "i"

 #undef SCNo64
 #define SCNo64      __PRELUDE_PRI64_PREFIX "o"

 #undef SCNx64
 #define SCNx64      __PRELUDE_PRI64_PREFIX "x"

 #undef SCNu64
 #define SCNu64      __PRELUDE_PRI64_PREFIX "u"

#endif



/*
 * Type definition
 */
typedef enum { 
	PRELUDE_BOOL_TRUE = TRUE, 
	PRELUDE_BOOL_FALSE = FALSE 
} prelude_bool_t;


#ifndef __PRELUDE_STDINT_HAVE_UINT8
 typedef signed char int8_t;
 typedef unsigned char uint8_t;
#endif


#ifndef __PRELUDE_STDINT_HAVE_UINT16
 typedef short int16_t;
 typedef unsigned short uint16_t;
#endif

#ifndef __PRELUDE_STDINT_HAVE_UINT32
 typedef int int32_t;
 typedef unsigned int uint32_t;
#endif

#ifndef __PRELUDE_STDINT_HAVE_UINT64
 #ifdef __PRELUDE_HAVE_64BIT_LONG

  typedef long int64_t;
  typedef unsigned long uint64_t;

 #else

  typedef long long int64_t;
  typedef unsigned long long uint64_t;

 #endif
#endif

#ifdef __cplusplus
 }
#endif

#endif /* _LIBPRELUDE_INTTYPES_H */
