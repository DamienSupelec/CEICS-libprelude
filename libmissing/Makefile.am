## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --lib=libmissing --source-base=libmissing --m4-base=libmissing/m4 --doc-base=libmissing/doc --aux-dir=. --lgpl --libtool --macro-prefix=gl ftw getaddrinfo inet_ntop minmax pathmax poll regex snprintf socklen strcase strcasestr strdup strndup strsep timegm vsnprintf

AUTOMAKE_OPTIONS = 1.5 gnits

noinst_HEADERS =
noinst_LIBRARIES =
noinst_LTLIBRARIES =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

noinst_LTLIBRARIES += libmissing.la

libmissing_la_SOURCES =
libmissing_la_LIBADD = $(gl_LTLIBOBJS)
libmissing_la_DEPENDENCIES = $(gl_LTLIBOBJS)
EXTRA_libmissing_la_SOURCES =
libmissing_la_LDFLAGS = $(AM_LDFLAGS)

## begin gnulib module alloca


EXTRA_DIST += alloca.c

EXTRA_libmissing_la_SOURCES += alloca.c

libmissing_la_LIBADD += @LTALLOCA@
libmissing_la_DEPENDENCIES += @LTALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/alloca_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

EXTRA_DIST += alloca_.h

## end   gnulib module alloca-opt

## begin gnulib module arpa_inet

BUILT_SOURCES += $(ARPA_INET_H)

# We need the following in order to create <arpa/inet.h> when the system
# doesn't have one.
arpa/inet.h:
	test -d arpa || mkdir arpa
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '#include <sys/socket.h>'; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += arpa/inet.h arpa/inet.h-t
MOSTLYCLEANDIRS += arpa

## end   gnulib module arpa_inet

## begin gnulib module ftw

libmissing_la_SOURCES += ftw_.h

EXTRA_DIST += ftw.c

EXTRA_libmissing_la_SOURCES += ftw.c

## end   gnulib module ftw

## begin gnulib module getaddrinfo


EXTRA_DIST += gai_strerror.c getaddrinfo.c getaddrinfo.h

EXTRA_libmissing_la_SOURCES += gai_strerror.c getaddrinfo.c

## end   gnulib module getaddrinfo

## begin gnulib module gettext-h

libmissing_la_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module inet_ntop


EXTRA_DIST += inet_ntop.c inet_ntop.h

EXTRA_libmissing_la_SOURCES += inet_ntop.c

## end   gnulib module inet_ntop

## begin gnulib module malloc


EXTRA_DIST += malloc.c

EXTRA_libmissing_la_SOURCES += malloc.c

## end   gnulib module malloc

## begin gnulib module mbchar


EXTRA_DIST += mbchar.c mbchar.h

EXTRA_libmissing_la_SOURCES += mbchar.c

## end   gnulib module mbchar

## begin gnulib module mbuiter

libmissing_la_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module memchr


EXTRA_DIST += memchr.c

EXTRA_libmissing_la_SOURCES += memchr.c

## end   gnulib module memchr

## begin gnulib module minmax

libmissing_la_SOURCES += minmax.h

## end   gnulib module minmax

## begin gnulib module mktime


EXTRA_DIST += mktime.c

EXTRA_libmissing_la_SOURCES += mktime.c

## end   gnulib module mktime

## begin gnulib module netinet_in

BUILT_SOURCES += $(NETINET_IN_H)

# We need the following in order to create <netinet/in.h> when the system
# doesn't have one.
netinet/in.h:
	test -d netinet || mkdir netinet
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '#include <sys/socket.h>'; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += netinet/in.h netinet/in.h-t
MOSTLYCLEANDIRS += netinet

## end   gnulib module netinet_in

## begin gnulib module pathmax


EXTRA_DIST += pathmax.h

## end   gnulib module pathmax

## begin gnulib module poll

BUILT_SOURCES += $(POLL_H)

# We need the following in order to create <poll.h> when the system
# doesn't have one.
poll.h: poll_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/poll_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += poll.h poll.h-t

EXTRA_DIST += poll.c poll_.h

EXTRA_libmissing_la_SOURCES += poll.c

## end   gnulib module poll

## begin gnulib module regex


EXTRA_DIST += regcomp.c regex.c regex.h regex_internal.c regex_internal.h regexec.c

EXTRA_libmissing_la_SOURCES += regcomp.c regex.c regex_internal.c regexec.c

## end   gnulib module regex

## begin gnulib module size_max

libmissing_la_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module snprintf


EXTRA_DIST += snprintf.c snprintf.h

EXTRA_libmissing_la_SOURCES += snprintf.c

## end   gnulib module snprintf

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

EXTRA_DIST += stdbool_.h

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	      -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	      -e 's|@''ABSOLUTE_STDINT_H''@|$(ABSOLUTE_STDINT_H)|g' \
	      -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	      -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	      -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	      -e 's/@''HAVE_UNSIGNED_LONG_LONG_INT''@/$(HAVE_UNSIGNED_LONG_LONG_INT)/g' \
	      -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	      -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	      -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	      -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	      -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	      -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	      -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	      -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	      -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	      < $(srcdir)/stdint_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

EXTRA_DIST += stdint_.h

## end   gnulib module stdint

## begin gnulib module strcase


EXTRA_DIST += strcase.h strcasecmp.c strncasecmp.c

EXTRA_libmissing_la_SOURCES += strcasecmp.c strncasecmp.c

## end   gnulib module strcase

## begin gnulib module strcasestr


EXTRA_DIST += strcasestr.c strcasestr.h

EXTRA_libmissing_la_SOURCES += strcasestr.c

## end   gnulib module strcasestr

## begin gnulib module strdup


EXTRA_DIST += strdup.c strdup.h

EXTRA_libmissing_la_SOURCES += strdup.c

## end   gnulib module strdup

## begin gnulib module strndup


EXTRA_DIST += strndup.c strndup.h

EXTRA_libmissing_la_SOURCES += strndup.c

## end   gnulib module strndup

## begin gnulib module strnlen


EXTRA_DIST += strnlen.c strnlen.h

EXTRA_libmissing_la_SOURCES += strnlen.c

## end   gnulib module strnlen

## begin gnulib module strnlen1

libmissing_la_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strpbrk


EXTRA_DIST += strpbrk.c strpbrk.h

EXTRA_libmissing_la_SOURCES += strpbrk.c

## end   gnulib module strpbrk

## begin gnulib module strsep


EXTRA_DIST += strsep.c strsep.h

EXTRA_libmissing_la_SOURCES += strsep.c

## end   gnulib module strsep

## begin gnulib module sys_socket

BUILT_SOURCES += $(SYS_SOCKET_H)

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: socket_.h
	test -d sys || mkdir sys
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/socket_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += socket_.h

## end   gnulib module sys_socket

## begin gnulib module time_r


EXTRA_DIST += time_r.c time_r.h

EXTRA_libmissing_la_SOURCES += time_r.c

## end   gnulib module time_r

## begin gnulib module timegm


EXTRA_DIST += timegm.c timegm.h

EXTRA_libmissing_la_SOURCES += timegm.c

## end   gnulib module timegm

## begin gnulib module vasnprintf


EXTRA_DIST += asnprintf.c printf-args.c printf-args.h printf-parse.c printf-parse.h vasnprintf.c vasnprintf.h

EXTRA_libmissing_la_SOURCES += asnprintf.c printf-args.c printf-parse.c vasnprintf.c

## end   gnulib module vasnprintf

## begin gnulib module vsnprintf


EXTRA_DIST += vsnprintf.c vsnprintf.h

EXTRA_libmissing_la_SOURCES += vsnprintf.c

## end   gnulib module vsnprintf

## begin gnulib module wcwidth

libmissing_la_SOURCES += wcwidth.h

## end   gnulib module wcwidth

## begin gnulib module xsize

libmissing_la_SOURCES += xsize.h

## end   gnulib module xsize


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done
